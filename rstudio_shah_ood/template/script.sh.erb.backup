#!/usr/bin/env bash

# Load the required environment
setup_env () {
  #module purge
  # If you want to use Singularity it is recommended you setup a module similar
  # to the included `example_module` and load it as:
  #
  #     module use "/path/to/example_module/modulefiles"
  #     module load singularity rstudio_singularity/3.4.3
  #
  # Bonus points if you install the `example_module` on the system so you don't
  # need to run `module use`.
  #export RSTUDIO_SINGULARITY_HOST_MNT=/
  #export RSERVER_LAUNCHER=/scratch/network/singularity/images/nickjer-singularity-rstudio-master/
  export RSTUDIO_SERVER_IMAGE="/projects/community/exchange/shahclass/shahclass.simg"
  export SINGULARITY_BINDPATH="/etc,/media,/mnt,/opt,/srv,/usr,/var,/home"
  export PATH="$PATH:/usr/lib/rstudio-server/bin"
  export SINGULARITYENV_PATH="$PATH"
}
setup_env

#
# Start RStudio Server
#
# PAM auth helper used by RStudio
 export RSTUDIO_AUTH="${PWD}/bin/auth"
#
# # Generate an `rsession` wrapper script
 export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"

# Generate an `rsession` wrapper script
# export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
#!/usr/bin/env bash

# Log all output from this script
    export RSESSION_LOG_FILE="${PWD}/rsession.log"
    exec &>>"\${RSESSION_LOG_FILE}"
# Launch the original command
    echo "Launching rsession..."
    set -x
    exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Set working directory to home directory
cd "${HOME}"

##Set secure key
export TMPDIR="$(mktemp -d)"

mkdir -p "$TMPDIR/rstudio-server"
python -c 'from uuid import uuid4; print(uuid4())' > "$TMPDIR/rstudio-server/secure-cookie-key"
chmod 0600 "$TMPDIR/rstudio-server/secure-cookie-key"

set -x
# Launch the RStudio Server
 echo "Starting up rserver..."

#singularity run -B "$TMPDIR:/tmp" "$RSTUDIO_SERVER_IMAGE" \
singularity run "$RSTUDIO_SERVER_IMAGE" \
  --www-port "${port}" \
   --auth-none 0 \
   --auth-pam-helper-path "${RSTUDIO_AUTH}" \
   --auth-encrypt-password 0 \
   --rsession-path "${RSESSION_WRAPPER_FILE}"

 echo " Running rserver..."
